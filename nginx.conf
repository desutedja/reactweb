# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    index index.html;

    server {
        server_name admin.yipy.id;

        # save logs here
        access_log /var/log/nginx/admin.yipy.id.log compression;
        error_log /var/log/nginx/admin.yipy.id.error.log debug;

        # where the root here
        root /var/www/superadmin;

        # if served from here go to sa
        location = / {
            return 301 $scheme://$host/sa;
        }

        location ~* /bm/(.*)$ {
            return 301 $scheme://$host/sa/$1;
        }

        location ~ \.css {
            add_header  Content-Type    text/css;
        }

        location ~ \.js {
            add_header  Content-Type    application/x-javascript;
        }

        location ~* /(.*)$ {
            try_files $uri $uri/ /index.html /404.html =404;
        }
    }

    server {
        server_name management.yipy.id;

        # save logs here
        access_log /var/log/nginx/management.yipy.id.log compression;
        error_log /var/log/nginx/management.yipy.id.error.log debug;

        # where the root here
        root /var/www/management;

        # if served from here go to bm
        location = / {
            return 301 $scheme://$host/bm;
        }

        location ~* /sa/(.*)$ {
            return 301 $scheme://$host/bm/$1;
        }

        location ~ \.css {
            add_header  Content-Type    text/css;
        }

        location ~ \.js {
            add_header  Content-Type    application/x-javascript;
        }

        location ~* /(.*)$ {
            try_files $uri $uri/ /index.html /404.html =404;
        }
    }

    server {
        location /health {
            return 200 'ok';
        }
    }
}
